body {
  margin: 0;
  padding: 0;
  height: 100vh;
  width: 100vw;
  background-color: #323237;
}

svg {
  max-height: 100vh;
  max-width: 100vw;
  height: 100vh;
  width: 100vw;
}

.node {
  /* transition: all 0.1s ease-in-out; */
  opacity: 1;
  cursor: pointer;
}
.node text::selection {
  background: none;
}
.node text::-moz-selection {
  background: none;
}
.node.ignored {
  opacity: 0.1;
}
.node:hover path {
  stroke-width: 5px;
}
.node.mentioned {
  opacity: 1;
}
.node.mentioned:not(.child):not(.parent).animated {
  opacity: 0.1;
  animation-name: mentioned-showing;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  animation-delay: 3s;
}
.node.clicked:not(.animated) text {
  /* transform: scale(1.1); */
  filter: drop-shadow(0px 0px 1px #fff);
  /* font-weight: bold; */
}
.node.clicked:not(.animated) path {
  /* transform: scale(1.1); */
  filter: drop-shadow(0px 0px 10px #fff);
  stroke-width: 5;
}
.node.clicked.animated text {
  animation-name: node-drawing-clicked-text;
  animation-duration: 0.5s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  animation-delay: 1s;
}
.node.clicked.animated path {
  animation-name: node-drawing-clicked-path;
  animation-duration: 0.5s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  animation-delay: 1s;
}
.node.parent path {
  /* transform: scale(1.1); */
  filter: drop-shadow(0px 0px 10px #fff);
  stroke-width: 2.5;
}
.node.child:not(.animated) path {
  filter: drop-shadow(0px 0px 10px #fff);
  stroke-width: 2.5;
}
.node.child.animated {
  opacity: 0.1;
  animation-name: node-showing-child;
  animation-duration: 0.5s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  animation-delay: 2.5s;
}
.node.child.animated path {
  animation-name: node-drawing-child-path;
  animation-duration: 0.5s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  animation-delay: 2.5s;
}
@keyframes node-drawing-clicked-path {
  to {
    filter: drop-shadow(0px 0px 10px #fff);
    stroke-width: 5;
  }
}
@keyframes node-drawing-clicked-text {
  to {
    filter: drop-shadow(0px 0px 1px #fff);
  }
}
@keyframes node-showing-child {
  from {
    opacity: 0.1;
  }
  to {
    opacity: 1;
  }
}
@keyframes node-drawing-child-path {
  to {
    filter: drop-shadow(0px 0px 10px #fff);
    stroke-width: 2.5;
  }
}

.edge {
  opacity: 1;
  /* transition: all 0.2s ease-in-out; */
}
.edge.mentioned {
  /* transform: scale(1.1); */
  opacity: 1;
}
.edge.mentioned path,
.edge.mentioned polygon {
  stroke: #b9bcbf;
}
.edge.incoming {
  /* transform: scale(1.1); */
  opacity: 1;
}
.edge.mentioned:not(.incoming):not(.outgoing).animated {
  opacity: 0.1;
  animation-name: mentioned-showing;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  animation-delay: 3s;
}
.edge.incoming.animated polygon {
  opacity: 0.1;
  animation-name: mentioned-showing;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  animation-delay: 1s;
}
.edge.incoming.animated path {
  stroke-dasharray: 10000;
  stroke-dashoffset: 10000;
  animation-name: edge-drawing;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
}
.edge.incoming path,
.edge.incoming polygon {
  stroke: #b9bcbf;
  stroke-width: 4px;
}
.edge.incoming polygon {
  fill: #b9bcbf;
}

.edge.outgoing {
  /* transform: scale(1.1); */
  opacity: 1;
}
.edge.outgoing.animated polygon {
  opacity: 0.1;
  animation-name: mentioned-showing;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  animation-delay: 1.5s;
}
.edge.outgoing.animated path {
  stroke-dasharray: 10000;
  stroke-dashoffset: 10000;
  animation-name: edge-drawing;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  animation-delay: 1.5s;
}
.edge.outgoing path,
.edge.incoming polygon {
  stroke: #b9bcbf;
  stroke-width: 4px;
}
.edge.outgoing polygon {
  fill: #b9bcbf;
}

.edge.ignored {
  /* transform: scale(1.1); */
  opacity: 0.1;
}
@keyframes edge-drawing {
  to {
    stroke-dashoffset: 0;
  }
}
@keyframes mentioned-showing {
  from {
    opacity: 0.1;
  }
  to {
    opacity: 1;
  }
}

div#app {
  position: relative;
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
}

div#svgContainer {
  position: relative;
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  display: flex;
}

div#options, div#controls {
  position: absolute;
  z-index: 1;
  margin: 20px;
  font-family: Arial, Helvetica, sans-serif;
  color: #f3f3f3;
  display: flex;
  flex-direction: column;
  align-items: center;
  transform: scale(0.7);
}
div#options {
  bottom: 0;
  left: 0;
}
div#controls {
  bottom: 0;
  right: 0;
}

/* Customize the label (the container) */
.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 20px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 20px;
  width: 20px;
  background-color: transparent;
  border: 2px solid #f3f3f3;
  box-sizing: border-box;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: rgba(255, 255, 255, 0.1);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 5px;
  top: 2px;
  width: 4px;
  height: 8px;
  border: solid #f3f3f3;
  border-width: 0 2px 2px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.tooltip {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(5px);
  z-index: 2;
  border-radius: 4px;
  padding: 10px;
  font-family: Arial, Helvetica, sans-serif;
  color: #f3f3f3;
  font-size: 12px;
  flex-direction: column;
  justify-content: left;
}
.tooltip > h4 {
  line-height: 16px;
  font-size: 16px;
  margin-top: 8px;
  margin-bottom: 8px;
  font-size: 16px;
}
.tooltip > .tooltip-prop {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  margin-top: 2px;
  margin-bottom: 2px;
}

button {
  height: 32px;
  width: 140px;
  line-height: 32px;
  font-size: 20px;
  border-radius: 16px;
  background: #b9bcbf;
  color: #fff;
  border: none;
  cursor: pointer;
  margin-bottom: 12px;
  opacity: 0;
  transition: all .2s ease-in-out;
}
